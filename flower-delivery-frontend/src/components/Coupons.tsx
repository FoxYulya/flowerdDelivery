import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import axios from "axios";
import type { Coupon } from "../types";

const API_BASE_URL = "https://flowerddelivery-6.onrender.com/api";

const Toast: React.FC<{ message: string; onClose: () => void }> = ({
  message,
  onClose,
}) => {
  useEffect(() => {
    const timer = setTimeout(onClose, 3000);
    return () => clearTimeout(timer);
  }, [onClose]);

  return <div className="toast">{message}</div>;
};

const Coupons: React.FC = () => {
  const [coupons, setCoupons] = useState<Coupon[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");
  const [toastMessage, setToastMessage] = useState("");

  useEffect(() => {
    const fetchCoupons = async () => {
      try {
        const response = await axios.get(`${API_BASE_URL}/coupons`);
        setCoupons(response.data);
      } catch (err) {
        setError("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫—É–ø–æ–Ω—ñ–≤");
        console.error("Error fetching coupons:", err);
      } finally {
        setLoading(false);
      }
    };

    fetchCoupons();
  }, []);

  const copyToClipboard = (code: string) => {
    navigator.clipboard.writeText(code);
    setToastMessage(`–ö—É–ø–æ–Ω "${code}" —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ! ‚úÖ`);
  };

  if (loading) return <div className="loading">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫—É–ø–æ–Ω—ñ–≤...</div>;
  if (error) return <div className="error">{error}</div>;

  return (
    <div className="container">
      <Link to="/" className="back-link">
        ‚Üê –Ω–∞ –ì–û–õ–û–í–ù–£
      </Link>

      <div className="coupons-header">
        <h1>üé´ –ö—É–ø–æ–Ω–∏ —Ç–∞ –∑–Ω–∏–∂–∫–∏</h1>
        <p>–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ü—ñ –∫—É–ø–æ–Ω–∏ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–Ω–∏–∂–æ–∫ –Ω–∞ –≤–∞—à—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</p>
      </div>

      <div className="coupons-grid">
        {coupons.map((coupon) => (
          <div
            key={coupon.id}
            className={`coupon-card ${!coupon.isActive ? "inactive" : ""}`}
            onClick={() => copyToClipboard(coupon.code)}
            style={{ cursor: "pointer" }}
          >
            <div className="coupon-header">
              <div className="coupon-discount">-{coupon.discount}%</div>
              {coupon.expiresAt && (
                <div className="coupon-expiry">
                  ‚è∞ –î–æ {new Date(coupon.expiresAt).toLocaleDateString("uk-UA")}
                </div>
              )}
            </div>

            <div className="coupon-body">
              <h3 className="coupon-code">
                {coupon.code} <span className="copy-icon">üìã</span>
              </h3>
              <p className="coupon-hint">–ù–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –∫—É–ø–æ–Ω, —â–æ–± —Å–∫–æ–ø—ñ—é–≤–∞—Ç–∏</p>
              <p className="coupon-description">{coupon.description}</p>
              {coupon.minOrderAmount && (
                <div className="coupon-condition">
                  üõí –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: {coupon.minOrderAmount} –≥—Ä–Ω
                </div>
              )}
            </div>

            <div className="coupon-footer">
              {coupon.isActive ? (
                <span className="coupon-status active">–ê–∫—Ç–∏–≤–Ω–∏–π</span>
              ) : (
                <span className="coupon-status inactive">–ù–µ–∞–∫—Ç–∏–≤–Ω–∏–π</span>
              )}
            </div>
          </div>
        ))}
      </div>

      {coupons.length === 0 && (
        <div className="empty-coupons">
          <h3>–ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫—É–ø–æ–Ω—ñ–≤</h3>
          <p>–°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –Ω–∞—à–∏–º–∏ –∞–∫—Ü—ñ—è–º–∏ —É —Å–æ—Ü—ñ–∞–ª—å–Ω–∏—Ö –º–µ—Ä–µ–∂–∞—Ö!</p>
        </div>
      )}

      <div className="coupons-info">
        <h3>–Ø–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∫—É–ø–æ–Ω–∏?</h3>
        <ol>
          <li>–°–∫–æ–ø—ñ—é–π—Ç–µ –∫–æ–¥ –∫—É–ø–æ–Ω–∞</li>
          <li>–î–æ–¥–∞–π—Ç–µ —Ç–æ–≤–∞—Ä–∏ –¥–æ –∫–æ—à–∏–∫–∞</li>
          <li>–ù–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –∫–æ—à–∏–∫–∞ –≤–≤–µ–¥—ñ—Ç—å –∫–æ–¥ –∫—É–ø–æ–Ω–∞</li>
          <li>–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏"</li>
          <li>–ó–Ω–∏–∂–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—Ä–∞—Ö—É—î—Ç—å—Å—è —É —Å—É–º—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</li>
        </ol>
      </div>

      {toastMessage && (
        <Toast message={toastMessage} onClose={() => setToastMessage("")} />
      )}
    </div>
  );
};

export default Coupons;
